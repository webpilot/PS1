#*********************************************************************************
# Script Name: Create-Profile.ps1
# Version: 1.0
# Author:  Dylan McQueen
# Date: June 13, 2013
#
# Description: This PowerShell script will check for the presence of a profile,
#              If there is none it will be created and results will show newly 
#              created file. The user will then have a choice to edit the profile
#              in notepad or not.
#*********************************************************************************
# Enable PS to run unsigned scripts for the current user
Set-ExecutionPolicy -scope CurrentUser -executionPolicy Unrestricted -force

# Initialization Section

#This is content to populate the Powershell profile
$content = '
#This Profile was autogenerated by the PowerShell Profile Maker
#Devoloped by Dylan McQueen dytronic@gmail.com
#The MIT License (MIT)
#Copyright (c) 2013 webpilot

#Set dir to users home
set-location $ENV:HOMEPATH

function prompt
{       
     
    # Set Window Title
    $host.UI.RawUI.WindowTitle = "$ENV:USERNAME@$ENV:COMPUTERNAME - $(Get-Location)"
     
    # Set Prompt
    Write-Host (Get-Date -Format G) -NoNew -Fore Red
    Write-Host " :: " -NoNew -Fore DarkGray
    Write-Host "$ENV:USERNAME@$ENV:COMPUTERNAME" -NoNew -Fore Yellow
    Write-Host " :: " -NoNew -Fore DarkGray
    Write-Host $(get-location) -Fore Green
     
    # Check if Administrator
    $wid=[System.Security.Principal.WindowsIdentity]::GetCurrent()
    $prp=new-object System.Security.Principal.WindowsPrincipal($wid)
    $adm=[System.Security.Principal.WindowsBuiltInRole]::Administrator
    $IsAdmin=$prp.IsInRole($adm)
    if ($IsAdmin) {       
        Write-Host "(admin) #" -NoNew -ForegroundColor Gray
        return " "
    }
    else {       
        Write-Host ">" -NoNew -ForegroundColor Gray
        return " "
    }
 }

#area for aliases
Set-Alias gs Get-Service
set-alias -name np -value c:\windows\system32\notepad.exe'

# Functions and Filters section

#This function displays the end of the script
Function theEnd
{
Clear-Host
    Write-Host "`n`n"
    Write-Host "---------------------------------------------------------------" -Fore DarkGreen           
    Write-Host "`t     Thank You for using the PowerShell Profile Maker  `n`n`n" -NoNew -Fore White
    Write-Host "`t`t     Devoloped by Dylan McQueen                      `n`n"   -NoNew -Fore Red
    Write-Host "`t`t     Copyright (c) 2013 webpilot                     `n`n"   -NoNew -Fore Red
    Write-Host "`t`t     The MIT License (MIT)                           `n`n"   -NoNew -Fore Red
    Write-Host "---------------------------------------------------------------" -Fore DarkGreen
    Start-Sleep 5
    Clear-Host 
    #reset colors to normal
    [console]::ResetColor()
    Exit

}

#This function is error message for (Y/N) 
Function eMsg 
{
    Clear-Host
    Write-Host "`n`n C'mon $ENV:USERNAME thats invalid input. Please use y for yes or n for no" -NoNew -Fore white
    Write-Host "`n`n"
}

# Main Processing Section

Clear-Host
if (Test-Path $profile) {
 Write-host " `n`n Hi $ENV:USERNAME, I Found a profile (listed below) so I'm not going to make a new one" -NoNew -Fore Red
 Get-ChildItem $profile
 Write-Host ""
 } else {
    [console]::ForegroundColor = "Red"  
    do {$newProfile = Read-Host " `n`n $ENV:USERNAME, I did't find a profile would you like me to create a blank one now (Y/N)"   
        if ("y","n" -notcontains $newProfile) {
            eMsg
        }
    }
    while ("y","n" -notcontains $newProfile)
    
    if ($newProfile -eq "Y") {
        Clear-Host
        New-Item -type file -Force $profile  
    } 
    else {        
        theEnd
    }
    #reset colors to normal
    [console]::ResetColor()
    
    [console]::ForegroundColor = "Yellow"   
    do {$aProfile = Read-Host " `n`n $ENV:USERNAME, Your new Profile is blank, Would you like me to create a awesome profile for you now? (Y/N)"
        eMsg
    }
    while ("y","n" -notcontains $aProfile) 
    
    if ($aProfile -eq "Y") {
        Clear-Host
        $p = $Profile
        $content > $p 
    }
    elseif ($response -eq "N") {
        theEnd
    }
    #reset colors to normal
    [console]::ResetColor()
   }
   
Write-Host "`n`n"    
[console]::ForegroundColor = "Green" 
do {$response = Read-Host " $ENV:USERNAME, Would you like to open your Profile and edit/view it in Notepad? (Y/N)"
    eMsg
}
while ("y","n" -notcontains $response) 

if ($response -eq "y") {
    Clear-Host
    notepad $Profile | Out-Null
    #Start-Process powershell -WindowStyle Hidden
    theEnd
} 
elseif ($response -eq "n") {
    theEnd
}
